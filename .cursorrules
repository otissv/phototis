# .cursorrules
# Context & rules for AI assistants when working in this repository.

app:
  name: "Image App"
  description: |
    A modern, web-based image editing application that combines
    Photoshop-like editing, Lightroom-style adjustments, and
    After Effects‚Äìinspired animation with real-time WebGL2 shader rendering.
    The app is written in TypeScript + React with TailwindCSS, React DnD, Biome and uses a 
    modular plugin system for effects, adjustment layers, and shaders.


audiences:
  - "üé® Creative Designers"
  - "üéû Motion & VFX Artists"
  - "üë©‚Äçüíª Indie Developers / Shader Learners"

value_proposition: |
  - For Designers: quick editing, presets, creative filters, multi-layer workflows.
  - For Motion/VFX Artists: timeline, keyframing, procedural animation, shader-based effects.
  - For Indie Devs: shader sandbox (Shader Lab), GLSL export, preset sharing.

features:
  core:
    - Layer system (image/document layers, adjustment layers, blend modes).
    - Real-time GPU rendering with WebGL2 + FBO compositing.
    - Adjustment layers (brightness, contrast, hue, saturation, exposure, gamma, vibrance, temperature).
    - Effects (blur, sharpen, noise/grain, invert, sepia, grayscale, vintage).
    - History system (undo/redo, checkpoints, thumbnails).
    - Preset save/load/export (JSON `.iapreset`).
    - Multi-renderer modes: default, worker (OffscreenCanvas), hybrid.
  advanced:
    - Shader Lab: no-code shader editor with UI annotations (`//@ui`) and GLSL export.
    - Animation: timeline, keyframes, modulators (LFO, noise, parameter linking).
    - Video export: MP4/WebM/GIF/sequence.
    - Pro effects: glow, displacement, turbulent noise.
  community:
    - Free offline desktop app for indie devs to build/share presets & shaders.
    - Paid SaaS web app for designers (multi-layer editing, presets).
    - Pro web app for motion/VFX (animation, advanced effects, export).
    - Embeddable viewer (`<image-app-player>`) with postMessage API for sharing animated presets online.

architecture:
  plugin_system: |
    - All effects, shaders, and adjustments are implemented as plugins.
    - Plugins define:
        ‚Ä¢ metadata (id, name, tags, required capabilities)
        ‚Ä¢ UI schema (sliders, toggles, color pickers, vec controls)
        ‚Ä¢ pass graph (GLSL shader ID, uniforms, inputs)
    - A central Plugin Registry collects plugins and filters them by product tier/capabilities.
    - Capability Provider enforces tier gating (Designer, Motion, Pro).
  core_engine: |
    - `ShaderManager`: compiles, links, and manages GLSL shaders.
    - `HybridRenderer`: orchestrates FBO pipelines and compositing.
    - `fbo-manager`: handles framebuffers and textures.
    - `canvas.image-editor.tsx`: React wrapper that binds UI state to the rendering engine.

rendering:
  pipeline: |
    - The rendering model is **layer-based**, similar to Photoshop/After Effects.
    - Layers are rendered in order and composited into an FBO chain.
    - Each layer can apply shaders, adjustments, masks, or blending.
    - Adjustment layers and masks are non-destructive and affect layers below them.
    - The HybridRenderer coordinates draw calls across layers and passes.
  layer_types:
    - "image": bitmap/photo content, can have filters applied.
    - "adjustment": applies color or shader adjustments to layers beneath.
    - "group": a container for multiple layers, used for nesting (precomps).
    - "solid": a generated fill (color/gradient), useful for backgrounds or mattes.
    - "document": the root canvas/document; can have global adjustments.
    - "mask": used to limit visibility of a target layer (alpha/luma masking).
  notes: |
    - Layers can be hidden, duplicated, reordered.
    - Each layer has blend mode and opacity.
    - Adjustment layers can be stacked and toggled independently.
    - Masks can be linked to image/group layers for non-destructive workflows.

guidance:
  - Prefer modular design: new adjustments/effects should be implemented as plugins.
  - Keep feature gating clean: use capability maps, not scattered `if (tier)` checks.
  - Preserve cross-product code reuse: free desktop, SaaS editor, and player should share the same core engine + plugins.
  - Always ensure shaders are safe (no undefined uniforms, prevent feedback loops).
  - UI should auto-generate from plugin schemas; avoid hardcoding controls.
  - Do not use lodash.
  - Do not use non null assertions
  - Always fully implement code

roadmap:
  Q1 ‚Äì Free Desktop Sandbox:
    - One image layer
    - Global adjustment layer
    - Basic adjustments: brightness, contrast, hue, saturation, exposure, gamma, vibrance, tint
    - Basic effects: blur, sharpen, grain, noise, invert, sepia, grayscale
    - Preset save/load/export (.iapreset)
    - Shader controls via //@ui annotations
    - Export PNG/JPEG/WebP
    - Local preset library (JSON folder)
    - Goal: seed community with presets & shaders
  Q2 ‚Äì Designer SaaS MVP:
    - Multi-layer editing + blend modes
    - Multiple adjustment layers
    - Advanced adjustments: highlights/shadows, vignette, clarity, texture, dehaze
    - LUT import/export
    - High-res export (PNG/JPEG/WebP/AVIF, ICO)
    - Cloud preset sync + sharing
    - Import presets from Desktop Sandbox
    - Goal: start monetization ($15‚Äì20/mo)
  Q3 ‚Äì Motion/VFX Expansion:
    - Timeline + keyframes
    - Modulators: LFO, noise, random, parameter linking
    - Animated adjustment layers
    - AE-style effects: glow, displacement, turbulent noise
    - Export: MP4, WebM, GIF, Image sequences
    - Animated presets (.iapreset with timeline data)
    - Goal: capture motion artists (higher tier $25‚Äì30/mo)
  Q4 ‚Äì Pro Ecosystem & Embeds:
    - Precomps (layer grouping)
    - Track mattes (alpha/luma masks)
    - Color grading wheels (shadows/midtones/highlights)
    - GLSL/HLSL/WebGPU export
    - <image-app-player> embeddable viewer with postMessage API
    - Public preset/shader marketplace (buy/sell)
    - Pro developer tier
    - Goal: premium upsell & ecosystem lock-in

future_features:
  lightroom_nice_to_haves:
    - Tone Curve (RGB + composite curve)
    - Clarity / Texture / Dehaze
    - Highlights/Shadows recovery
    - Vignette (radial control)
    - Gradient & Radial Masks (local adjustments)
    - Color Grading Wheels (Shadows/Midtones/Highlights)
    - Lens Corrections (distortion, chromatic aberration)
    - Crop Tool with Aspect Ratios
  photoshop_nice_to_haves:
    - Layer Masks
    - Smart Objects / Linked Layers
    - Content-Aware Fill / Inpainting (AI-powered later)
    - Advanced Selection Tools (lasso, magic wand, color range)
    - Warp / Distort Tools (perspective, liquify-lite)
    - Clone Stamp / Healing Brush
    - Text Layers (MSDF/SDF rendering)
    - Layer Styles (drop shadow, inner shadow, stroke, glow)
  aftereffects_nice_to_haves:
    - Adjustment Layers with Animation
    - Track Mattes (alpha/luma masking)
    - Precomps / Nested Compositions
    - Timeline Markers (sync to beats/events)
    - Expressions Lite (parameter linking, math ops)
    - Popular AE Effects: Glow, Motion Tile, Echo/Trails, Turbulent Noise, Wave Warp
    - Time Remapping (speed ramps, freeze frames)
    - Motion Blur (per-layer simulation)

priority_guidance:
  phase_1 (short-term):
    - Lightroom: Highlights/Shadows, Vignette, Tone Curve
    - Photoshop: Layer Masks, Crop Tool
  phase_2 (medium-term):
    - Lightroom: Clarity/Texture/Dehaze
    - Photoshop: Text Layers, Layer Styles
    - AE: Timeline + Keyframes, Adjustment Layers, Glow, Displace, Turbulent Noise
  phase_3 (long-term):
    - Lightroom: Gradient/Radial Masks, Color Grading Wheels
    - Photoshop: Warp/Distort Tools, Smart Objects
    - AE: Track Mattes, Precomps, Markers, Expressions Lite
  phase_4 (stretch):
    - Lightroom: Lens Corrections
    - Photoshop: Content-Aware Fill, Clone Stamp
    - AE: Time Remapping, Motion Blur, Echo/Trails
